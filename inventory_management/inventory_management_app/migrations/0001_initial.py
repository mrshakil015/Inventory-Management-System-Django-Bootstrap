# Generated by Django 5.1.6 on 2025-02-23 19:39

import autoslug.fields
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MedicineCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True)),
                ('message', models.TextField(null=True)),
                ('recipient', models.EmailField(max_length=254, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Staff', 'Staff'), ('Inventory Manager', 'Inventory Manager'), ('Billing Staff', 'Billing Staff')], max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(max_length=20, null=True)),
                ('customer_phone', models.CharField(max_length=15, null=True)),
                ('customer_email', models.EmailField(max_length=254, null=True)),
                ('customer_address', models.TextField(null=True)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_added', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, null=True)),
                ('employee_name', models.CharField(max_length=20, null=True)),
                ('employee_contact', models.CharField(max_length=15, null=True)),
                ('employee_address', models.TextField(null=True)),
                ('employee_picture', models.ImageField(blank=True, null=True, upload_to='employee/')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_added', to=settings.AUTH_USER_MODEL)),
                ('employee_user', models.OneToOneField(max_length=10, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MedicineModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_name', models.CharField(help_text='Mention the Bottle name with the Pack Size. Example: ALKATON 100ml', max_length=100, null=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, null=True, populate_from='medicine_name', unique=True)),
                ('medicine_type', models.CharField(choices=[('Liquids', 'Lliquids'), ('Solids', 'Solids')], max_length=10, null=True)),
                ('description', models.TextField(blank=True)),
                ('medicine_picture', models.ImageField(blank=True, null=True, upload_to='medicines/')),
                ('pack_size', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Pack size unit must be the ml/gm.', max_digits=10, null=True)),
                ('total_case_pack', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('stocks', models.CharField(choices=[('Available', 'Available'), ('Out of Stock', 'Out of Stock')], default='Available', max_length=20, null=True)),
                ('unit_price', models.FloatField(blank=True, default=0, help_text='Unit price of the product calculated by per per pack size. This is the sale price', null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medicine_added', to=settings.AUTH_USER_MODEL)),
                ('medicine_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medicine_category', to='inventory_management_app.medicinecategorymodel')),
            ],
        ),
        migrations.CreateModel(
            name='BottleBreakageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lost_quantity', models.PositiveIntegerField(default=0, help_text='Lost the no of case pack', null=True)),
                ('date_time', models.DateField(null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='breakage_added', to=settings.AUTH_USER_MODEL)),
                ('responsible_employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory_management_app.employeemodel')),
                ('medicine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='breakages', to='inventory_management_app.medicinemodel')),
            ],
        ),
        migrations.CreateModel(
            name='MedicineStockModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_case_pack', models.PositiveIntegerField(default=0, null=True)),
                ('purchase_price', models.DecimalField(decimal_places=2, default=0, help_text='Unit price of per pack', max_digits=10, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_added', to=settings.AUTH_USER_MODEL)),
                ('medicine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medicinestocks', to='inventory_management_app.medicinemodel')),
            ],
        ),
        migrations.CreateModel(
            name='OrderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_no', models.CharField(max_length=10, null=True, unique=True)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('order_status', models.CharField(choices=[('Progress', 'Progress'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled')], default='Progress', max_length=20, null=True)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_added', to=settings.AUTH_USER_MODEL)),
                ('customer_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory_management_app.customermodel')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_quantity', models.DecimalField(decimal_places=2, default=0, help_text='Add the Medicine quantity into ml/gm', max_digits=6, null=True)),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
                ('medicine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medicine_orders', to='inventory_management_app.medicinemodel')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='inventory_management_app.ordermodel')),
            ],
        ),
    ]
